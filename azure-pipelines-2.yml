# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4


trigger:
- main

pool:
  name: Default
  demands:
  - Agent.Name -equals DESKTOP-86RQBBR


variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

# steps:
# - task: DownloadBuildArtifacts@0
#   displayName: 'Download artifact'
#   inputs:
#     buildType: 'specific'
#     project: 'MVC Agile Process'
#     pipeline: 'CI Pipeline'
#     downloadType: 'single'
#     artifactName: 'drop'
#     downloadPath: '$(System.ArtifactsDirectory)'

stages:
- stage: DeployToIIS
  displayName: 'Deploy to IIS'
  jobs:
  - job: DeployJob
    displayName: 'Deploy Job'
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: 'Download artifact'
      inputs:
        buildType: 'specific'
        project: 'MVC Agile Process'
        pipeline: 'CI Pipeline'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    # - task: IISWebAppDeploymentOnMachineGroup@0
    #   inputs:
    #       WebSiteName: 'MvcMovie'  
    #       Package: '$(System.ArtifactsDirectory)\**\*.zip'
    - task: IISWebAppDeploymentOnMachineGroup@0
      inputs:
        WebSiteName: 'MvcMovie'
        Package: '$(System.ArtifactsDirectory)\**\*.zip'
      displayName: 'Deploying to IIS Web Server'
      continueOnError: true # This line ensures that the pipeline continues even if the deployment fails.
      timeoutInMinutes: 10 # Adjust the timeout as needed.

    - script: |
        echo "Code has been deployed to the IIS web server successfully!"
      displayName: 'Deployment Complete Message'
      condition: succeeded()
